@model Perscribo.EF.Library.Models.Role
@using Perscribo.EF.Library.Models;
@using System.Collections.Generic;

@{
    ViewBag.Title = "Create";
}

<h2>New Application</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Role</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="">
            @Html.LabelFor(model => model.PositionTitle)
            <span class="col2">
                @Html.EditorFor(model => model.PositionTitle)
                @Html.ValidationMessageFor(model => model.PositionTitle)
            </span>
        </div>

        <div class="">
            @Html.LabelFor(model => model.AppliedForOn)
            <span class="col2">
                @Html.EditorFor(model => model.AppliedForOn)
                @Html.ValidationMessageFor(model => model.AppliedForOn)
            </span>
        </div>

        <div class="">
            Reference Number
            <span class="col2">
                @Html.EditorFor(model => model.ReferenceNumber)
                @Html.ValidationMessageFor(model => model.ReferenceNumber)
            </span>
        </div>

        <div class="">
            @Html.LabelFor(model => model.PositionType)
            <span class="col2">
                @Html.DropDownList("PositionType", string.Empty)
                @Html.ValidationMessageFor(model => model.PositionType)
            </span>
        </div>

        <div class="">
            Salary Range
            <span class="col2">
                @Html.EditorFor(model => model.LowSalaryRange) (low)
                @Html.ValidationMessageFor(model => model.LowSalaryRange)
                @Html.EditorFor(model => model.HighSalaryRange) (high)
                @Html.ValidationMessageFor(model => model.HighSalaryRange)
                @Html.DropDownList("SalaryType", string.Empty)
                @Html.ValidationMessageFor(model => model.SalaryType)
            </span>
        </div>

        <div class="">
            @Html.LabelFor(model => model.Status)
            <span class="col2">
                @Html.DropDownList("Status", string.Empty)
                @Html.ValidationMessageFor(model => model.Status)
            </span>
        </div>

        <div class="">
            @Html.LabelFor(model => model.Agency)
            <span class="col2">
                @Html.DropDownList("AgencyID", string.Empty)
                @{
    Html.RenderAction("Consultants", "PartialViews");
                }
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#" id="addAgency">Add New Agency</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#" id="addConsultant">Add New Consultant</a>
            </span>
        </div>
        <div id="newAgency" class="irrelevant">
            <fieldset>
                <legend>New Agency</legend>
                <div class="">
                    @Html.LabelFor(model => model.Agency):
                   <span class="col2">
                       @Html.EditorFor(model => model.Agency.Name)
                       @Html.ValidationMessageFor(model => model.Agency.Name)
                       <input type="button" value="Save" id="saveAgency" />
                   </span>
                </div>
            </fieldset>
        </div>
        <div id="newConsultant" class="irrelevant">
            <fieldset>
                <legend>New Consultant</legend>
                <div class="">
                    @Html.LabelFor(model => model.Consultant):
                   <span class="col2">
                       @Html.EditorFor(model => model.Consultant.FirstName)
                       @Html.ValidationMessageFor(model => model.Company.Name)
                       <input type="button" value="Save" id="saveConsultant" />
                   </span>
                </div>
            </fieldset>
        </div>

        <div class="">
            @Html.LabelFor(model => model.Company)
            <span class="col2">
                @Html.DropDownList("CompanyID", string.Empty)
                <a href="#" id="addCompany">Add New Company</a>
            </span>
        </div>
        <div id="newCompany" class="irrelevant">
            <fieldset>
                <legend>New Company</legend>
                <div class="">
                    @Html.LabelFor(model => model.Company):
                   <span class="col2">
                       @Html.EditorFor(model => model.Company.Name)
                       @Html.ValidationMessageFor(model => model.Company.Name)
                       <input type="button" value="Save" id="saveCompany" />
                   </span>
                </div>
            </fieldset>
        </div>

        <div class="">
            @Html.LabelFor(model => model.AgentInterview)
            <span class="col2">
                @Html.EditorFor(model => model.AgentInterview)
                @Html.ValidationMessageFor(model => model.AgentInterview)
            </span>
        </div>

        <p>
            <input type="submit" value="Save" id="SubmitButton" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(function () {
        $("#Company_Name").prop('disabled', true);
        $("#Agency_Name").prop('disabled', true);

        $('#AgencyID').change(function () {
            var url = "PartialViews/Consultants/" + $('#AgencyID').val();
            $.ajax({
                url: url,
                dataType: "html",
                success: function (data) {
                    $('#ConsultantID').html(data);
                }
            });
        });

        $('#addAgency').click(function (e) {
            e.preventDefault();
            $("#Agency_Name").prop('disabled', false);
            $("#SubmitButton").prop('disabled', true);
            $('#newAgency').css("display", "inline");
        });
        $('#addConsultant').click(function (e) {
            e.preventDefault();
            $("#SubmitButton").prop('disabled', true);
        });

        $('#addCompany').click(function (e) {
            e.preventDefault();
            $("#Company_Name").prop('disabled', false);
            $("#SubmitButton").prop('disabled', true);
            $('#newCompany').css("display", "inline");
        });

        $('#saveAgency').click(function (e) {
            var url = "Application/QuickAgencySave/" + $("#Agency_Name").val();
            $.ajax({
                url: url,
                dataType: "html",
                success: function (data) {

                },
                fail: function () {
                    alert('it did not work');
                }
            });

            $("#Agency_Name").prop('disabled', true);
            $("#SubmitButton").prop('disabled', false);
            $('#newAgency').css("display", "none");
        });

        $('#saveCompany').click(function (e) {
            var url = "Application/QuickCompanySave/" + $("#Company_Name").val();
            $.ajax({
                url: url,
                dataType: "html",
                success: function (data) {
                    
                },
                fail: function () {
                    alert('it did not work');
                }
            });

            $("#Company_Name").prop('disabled', true);
            $("#SubmitButton").prop('disabled', false);
            $('#newCompany').css("display", "none");
        });
    })
</script>
